"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[913],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,g=d["".concat(i,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(g,l(l({ref:t},u),{},{components:n})):r.createElement(g,l({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8331:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={},l="Part 5 - Monitoring",s={unversionedId:"node-validator-guide/monitoring",id:"node-validator-guide/monitoring",title:"Part 5 - Monitoring",description:"- Copy Vlad's guide",source:"@site/docs/node-validator-guide/5-monitoring.md",sourceDirName:"node-validator-guide",slug:"/node-validator-guide/monitoring",permalink:"/node-validator-guide/monitoring",draft:!1,editUrl:"https://github.com/LYXstaker/docs/tree/main/packages/create-docusaurus/templates/shared/docs/node-validator-guide/5-monitoring.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Part 4 - LUKSO Network Setup",permalink:"/node-validator-guide/network-setup"}},i={},p=[{value:"Why would you want to do monitoring?",id:"why-would-you-want-to-do-monitoring",level:2},{value:"Overview",id:"overview",level:2},{value:"4-1: Node Exporter",id:"4-1-node-exporter",level:2},{value:"Add a user",id:"add-a-user",level:3},{value:"Install",id:"install",level:3},{value:"Configure system service",id:"configure-system-service",level:3},{value:"Enable service",id:"enable-service",level:3},{value:"4-2: Json Exporter",id:"4-2-json-exporter",level:2},{value:"Prerequisites",id:"prerequisites",level:4},{value:"Build and Install",id:"build-and-install",level:4},{value:"Configure",id:"configure",level:4},{value:"Configure Service",id:"configure-service",level:4},{value:"4-3: Blackbox Exporter",id:"4-3-blackbox-exporter",level:2},{value:"Configure",id:"configure-1",level:4},{value:"Configure Service",id:"configure-service-1",level:4},{value:"4-4: Prometheus",id:"4-4-prometheus",level:2},{value:"Configure",id:"configure-2",level:4},{value:"Configure Service",id:"configure-service-2",level:4},{value:"4-5: Grafana",id:"4-5-grafana",level:2},{value:"Configure Service",id:"configure-service-3",level:4},{value:"Configure Dashboard",id:"configure-dashboard",level:4},{value:"Data Source",id:"data-source",level:5},{value:"Install Dashboard",id:"install-dashboard",level:5},{value:"Enable Alerts",id:"enable-alerts",level:5}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"part-5---monitoring"},"Part 5 - Monitoring"),(0,o.kt)("admonition",{title:"ToDo",type:"info"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"Copy Vlad's guide"),(0,o.kt)("li",{parentName:"ul"},"Fix price"),(0,o.kt)("li",{parentName:"ul"},"Add from other sources "))),(0,o.kt)("p",null,"This guide is meant for people with no or little experience in monitoring. It will show you step by step how to do monitoring on your machine by giving you the instructions to install and configure all the tools needed. It will assume you are using a modern linux distribution with systemd and APT (like Ubuntu 20.04) on a modern x86 CPU (Intel, AMD)."),(0,o.kt)("h2",{id:"why-would-you-want-to-do-monitoring"},"Why would you want to do monitoring?"),(0,o.kt)("p",null,"Here are some good reasons why you might want to do monitoring on your machine:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Information visibility"),": You want to expose and be able to easily see your machine details."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Issue tracking and debugging"),": You want to be able to inspect what happened in the past and see clearly how your machine reacted to some event."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Issue prevention"),": You want to be able to see potential resources exhaustion ahead of time.")),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"We will install 5 tools with this guide:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://prometheus.io/docs/guides/node-exporter/"},"Node Exporter")," - monitors the node machine's performance")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/prometheus-community/json_exporter"},"JSON Exporter")," - scrapes LUKSO price information from CoinGecko.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/prometheus/blackbox_exporter"},"Blackbox Exporter")," monitors ping time between the node machine and two DNS servers.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://prometheus.io/docs/introduction/overview/"},"Prometheus")," - collects metrics from the node, JSON and Blackbox exporters.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://grafana.com/oss/grafana/"},"Grafana"),' - queries Prometheus for metrics, displays the information on "dashboards," and provides alerts when data is abnormal.'))),(0,o.kt)("p",null,"Connect to your node machine and proceed to the next step"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"ssh lukso\n")),(0,o.kt)("h2",{id:"4-1-node-exporter"},"4-1: Node Exporter"),(0,o.kt)("p",null,"Node_exporter"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"add description")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"add-a-user"},"Add a user"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo adduser --system node_exporter --group --no-create-home\n")),(0,o.kt)("h3",{id:"install"},"Install"),(0,o.kt)("p",null,"Check ",(0,o.kt)("a",{parentName:"p",href:"https://prometheus.io/download/#node_exporter"},"https://prometheus.io/download/#node_exporter")," to make sure 1.3.1 is the latest stable. As of this writing, 1.4.0 was still in pre-release."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"wget https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz\n")),(0,o.kt)("p",null,"Verify the SHA256 checksum\nGo to ",(0,o.kt)("a",{parentName:"p",href:"https://prometheus.io/download/#node_exporter"},"https://prometheus.io/download/#node_exporter")," and confirm the output of this command matches the checksum listed on the download page."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sha256sum node_exporter-1.3.1.linux-amd64.tar.gz\n")),(0,o.kt)("p",null,"Extract the archive"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"tar xzvf node_exporter-1.3.1.linux-amd64.tar.gz\n")),(0,o.kt)("p",null,"Copy the binary to the following location and set ownership"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo cp node_exporter-1.3.1.linux-amd64/node_exporter /usr/local/bin/\nsudo chown node_exporter:node_exporter /usr/local/bin/node_exporter\n")),(0,o.kt)("p",null,"Clean up"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rm",metastring:"node_exporter-1.3.1.linux-amd64.tar.gz","node_exporter-1.3.1.linux-amd64.tar.gz":!0},"rm -rf node_exporter-1.3.1.linux-amd64\n")),(0,o.kt)("h3",{id:"configure-system-service"},"Configure system service"),(0,o.kt)("p",null,"Create a node explorer configuration file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="execute the command"',title:'"execute',the:!0,'command"':!0},"sudo nano /etc/systemd/system/node_exporter.service\n")),(0,o.kt)("p",null,"Add the following to the file, then save and quit."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="contents of /etc/systemd/system/node_exporter.service"',title:'"contents',of:!0,'/etc/systemd/system/node_exporter.service"':!0},"[Unit]\nDescription=Node Exporter\n\n[Service]\nType=simple\nRestart=always\nRestartSec=5\nUser=node_exporter\nExecStart=/usr/local/bin/node_exporter\n\n[Install]\nWantedBy=multi-user.target\n")),(0,o.kt)("h3",{id:"enable-service"},"Enable service"),(0,o.kt)("p",null,"Release systemd to reflect the changes"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo systemctl daemon-reload\n")),(0,o.kt)("p",null,"Start and check the status of the service"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo systemctl start node_exporter\nsudo systemctl status node_exporter\n")),(0,o.kt)("p",null,'The output of the status should say "active (running)" in green.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u25cf node_exporter.service - Node Exporter\n     Loaded: loaded (/etc/systemd/system/node_exporter.service; disabled; vendo>\n     Active: active (running) since Wed 2021-08-04 10:48:25 EDT; 4s ago\n   Main PID: 10984 (node_exporter)\n      Tasks: 5 (limit: 18440)\n     Memory: 2.4M\n     CGroup: /system.slice/node_exporter.service\n             \u2514\u250010984 /usr/local/bin/node_exporter\n\nAug 04 10:48:25 remy-MINIPC-PN50 node_exporter[10984]: level=info ts=2021-08-04>\nAug 04 10:48:25 remy-MINIPC-PN50 node_exporter[10984]: level=info ts=2021-08-04>\nAug 04 10:48:25 remy-MINIPC-PN50 node_exporter[10984]: level=info ts=2021-08-04>\nAug 04 10:48:25 remy-MINIPC-PN50 node_exporter[10984]: level=info ts=2021-08-04>\nAug 04 10:48:25 remy-MINIPC-PN50 node_exporter[10984]: level=info ts=2021-08-04>\nAug 04 10:48:25 remy-MINIPC-PN50 node_exporter[10984]: level=info ts=2021-08-04>\nAug 04 10:48:25 remy-MINIPC-PN50 node_exporter[10984]: level=info ts=2021-08-04>\nAug 04 10:48:25 remy-MINIPC-PN50 node_exporter[10984]: level=info ts=2021-08-04>\nAug 04 10:48:25 remy-MINIPC-PN50 node_exporter[10984]: level=info ts=2021-08-04>\nAug 04 10:48:25 remy-MINIPC-PN50 node_exporter[10984]: level=info ts=2021-08-04>\n")),(0,o.kt)("p",null,"Press ",(0,o.kt)("inlineCode",{parentName:"p"},"q")," to quit"),(0,o.kt)("p",null,"Set Node Exporter to start on boot"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo systemctl enable node_exporter\n")),(0,o.kt)("h2",{id:"4-2-json-exporter"},"4-2: Json Exporter"),(0,o.kt)("h4",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"Check ",(0,o.kt)("inlineCode",{parentName:"p"},"go")," version if installed:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"go version\n")),(0,o.kt)("p",null,"If it is less than ",(0,o.kt)("inlineCode",{parentName:"p"},"1.17.7")," please install following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"wget https://dl.google.com/go/go1.17.7.linux-amd64.tar.gz\nsudo tar -xvf go1.17.7.linux-amd64.tar.gz\nrm go1.17.7.linux-amd64.tar.gz\nsudo mv go /usr/local/go-1.17.7\nsudo ln -sf /usr/local/go-1.17.7/bin/go /usr/bin/go\ngo version\n")),(0,o.kt)("h4",{id:"build-and-install"},"Build and Install"),(0,o.kt)("p",null,"User:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo adduser --system json_exporter --group --no-create-home\n")),(0,o.kt)("p",null,"Install:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"cd\ngit clone https://github.com/prometheus-community/json_exporter.git\ncd json_exporter\nmake build\nsudo cp json_exporter /usr/local/bin/\nsudo chown json_exporter:json_exporter /usr/local/bin/json_exporter\ncd\nrm -rf json_exporter\n")),(0,o.kt)("h4",{id:"configure"},"Configure"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo mkdir /etc/json_exporter\nsudo chown json_exporter:json_exporter /etc/json_exporter\n")),(0,o.kt)("p",null,"Setup ",(0,o.kt)("inlineCode",{parentName:"p"},"LYX")," token price:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/json_exporter/json_exporter.yml\n")),(0,o.kt)("p",null,"The content of configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'metrics:\n- name: lyxusd\n  path: "{.lukso-token.usd}"\n  help: Lukso (LYX) price in USD\n')),(0,o.kt)("p",null,"Change ownership of configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo chown json_exporter:json_exporter /etc/json_exporter/json_exporter.yml\n")),(0,o.kt)("h4",{id:"configure-service"},"Configure Service"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/systemd/system/json_exporter.service\n")),(0,o.kt)("p",null,"The content of service configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"[Unit]\nDescription=JSON Exporter\n\n[Service]\nType=simple\nRestart=always\nRestartSec=5\nUser=json_exporter\nExecStart=/usr/local/bin/json_exporter --config.file /etc/json_exporter/json_exporter.yml\n\n[Install]\nWantedBy=multi-user.target\n")),(0,o.kt)("p",null,"Enable service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo systemctl daemon-reload\nsudo systemctl start json_exporter\nsudo systemctl enable json_exporter\n")),(0,o.kt)("h2",{id:"4-3-blackbox-exporter"},"4-3: Blackbox Exporter"),(0,o.kt)("p",null,"Pings google and cloudflare to track latency. This is optional."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo adduser --system blackbox_exporter --group --no-create-home\n")),(0,o.kt)("p",null,"Install:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"cd\nwget https://github.com/prometheus/blackbox_exporter/releases/download/v0.18.0/blackbox_exporter-0.18.0.linux-amd64.tar.gz\ntar xvzf blackbox_exporter-0.18.0.linux-amd64.tar.gz\nsudo cp blackbox_exporter-0.18.0.linux-amd64/blackbox_exporter /usr/local/bin/\nsudo chown blackbox_exporter:blackbox_exporter /usr/local/bin/blackbox_exporter\nsudo chmod 755 /usr/local/bin/blackbox_exporter\nrm blackbox_exporter-0.18.0.linux-amd64.tar.gz\nrm -rf blackbox_exporter-0.18.0.linux-amd64\n")),(0,o.kt)("p",null,"Enable ping permissions:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo setcap cap_net_raw+ep /usr/local/bin/blackbox_exporter\n")),(0,o.kt)("h4",{id:"configure-1"},"Configure"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo mkdir /etc/blackbox_exporter\nsudo chown blackbox_exporter:blackbox_exporter /etc/blackbox_exporter\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/blackbox_exporter/blackbox.yml\n")),(0,o.kt)("p",null,"The content of configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"modules:\n        icmp:\n                prober: icmp\n                timeout: 10s\n                icmp:\n                        preferred_ip_protocol: ipv4\n")),(0,o.kt)("p",null,"Change ownership of configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo chown blackbox_exporter:blackbox_exporter /etc/blackbox_exporter/blackbox.yml\n")),(0,o.kt)("h4",{id:"configure-service-1"},"Configure Service"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/systemd/system/blackbox_exporter.service\n")),(0,o.kt)("p",null,"The content of service configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"[Unit]\nDescription=Blackbox Exporter\n\n[Service]\nType=simple\nRestart=always\nRestartSec=5\nUser=blackbox_exporter\nExecStart=/usr/local/bin/blackbox_exporter --config.file /etc/blackbox_exporter/blackbox.yml\n\n[Install]\nWantedBy=multi-user.target\n")),(0,o.kt)("p",null,"Enable service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo systemctl daemon-reload\nsudo systemctl start blackbox_exporter\nsudo systemctl enable blackbox_exporter\n")),(0,o.kt)("h2",{id:"4-4-prometheus"},"4-4: Prometheus"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo adduser --system prometheus --group --no-create-home\n")),(0,o.kt)("p",null,"Identify latest version for ",(0,o.kt)("inlineCode",{parentName:"p"},"linux-amd64")," ",(0,o.kt)("a",{parentName:"p",href:"https://prometheus.io/download/"},"here"),", e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"2.34.0"),". Install prometheus by replacing ",(0,o.kt)("inlineCode",{parentName:"p"},"{VERSION}")," in the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"cd\nwget https://github.com/prometheus/prometheus/releases/download/v{VERSION}/prometheus-{VERSION}.linux-amd64.tar.gz\ntar xzvf prometheus-{VERSION}.linux-amd64.tar.gz\ncd prometheus-{VERSION}.linux-amd64\nsudo cp promtool /usr/local/bin/\nsudo cp prometheus /usr/local/bin/\nsudo chown root:root /usr/local/bin/promtool /usr/local/bin/prometheus\nsudo chmod 755 /usr/local/bin/promtool /usr/local/bin/prometheus\ncd\nrm prometheus-{VERSION}.linux-amd64.tar.gz\nrm -rf prometheus-{VERSION}.linux-amd64\n")),(0,o.kt)("h4",{id:"configure-2"},"Configure"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo mkdir -p /etc/prometheus/console_libraries /etc/prometheus/consoles /etc/prometheus/files_sd /etc/prometheus/rules /etc/prometheus/rules.d\n")),(0,o.kt)("p",null,"Edit configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/prometheus/prometheus.yml\n")),(0,o.kt)("p",null,"The content of configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"global:\n  scrape_interval: 15s\n  evaluation_interval: 15s\n\nscrape_configs:\n  - job_name: 'prometheus'\n    scrape_interval: 5s\n    static_configs:\n      - targets: ['127.0.0.1:9090']\n  - job_name: 'beacon node'\n    scrape_interval: 5s\n    static_configs:\n      - targets: ['127.0.0.1:8080']\n  - job_name: 'node_exporter'\n    scrape_interval: 5s\n    static_configs:\n      - targets: ['127.0.0.1:9100']\n  - job_name: 'validator'\n    scrape_interval: 5s\n    static_configs:\n      - targets: ['127.0.0.1:8081']\n  - job_name: 'ping_google'\n    metrics_path: /probe\n    params:\n      module: [icmp]\n    static_configs:\n      - targets:\n        - 8.8.8.8\n    relabel_configs:\n      - source_labels: [__address__]\n        target_label: __param_target\n      - source_labels: [__param_target]\n        target_label: instance\n      - target_label: __address__\n        replacement: 127.0.0.1:9115  # The blackbox exporter's real hostname:port.\n  - job_name: 'ping_cloudflare'\n    metrics_path: /probe\n    params:\n      module: [icmp]\n    static_configs:\n      - targets:\n        - 1.1.1.1\n    relabel_configs:\n      - source_labels: [__address__]\n        target_label: __param_target\n      - source_labels: [__param_target]\n        target_label: instance\n      - target_label: __address__\n        replacement: 127.0.0.1:9115  # The blackbox exporter's real hostname:port.\n  - job_name: json_exporter\n    static_configs:\n    - targets:\n      - 127.0.0.1:7979\n  - job_name: json\n    metrics_path: /probe\n    static_configs:\n    - targets:\n      - https://api.coingecko.com/api/v3/simple/price?ids=lukso-token&vs_currencies=usd\n    relabel_configs:\n    - source_labels: [__address__]\n      target_label: __param_target\n    - source_labels: [__param_target]\n      target_label: instance\n    - target_label: __address__\n      replacement: 127.0.0.1:7979\n")),(0,o.kt)("p",null,"Prepare data directory for prometheus:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo chown -R prometheus:prometheus /etc/prometheus\nsudo mkdir /var/lib/prometheus\nsudo chown prometheus:prometheus /var/lib/prometheus\nsudo chmod 755 /var/lib/prometheus\n")),(0,o.kt)("p",null,"Open port to access to metrics. This is optional, only for external use:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo ufw allow 9090/tcp\n")),(0,o.kt)("h4",{id:"configure-service-2"},"Configure Service"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/systemd/system/prometheus.service\n")),(0,o.kt)("p",null,"The content of service configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"[Unit]\nDescription=Prometheus\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nUser=prometheus\nGroup=prometheus\nType=simple\nRestart=always\nRestartSec=5\nExecStart=/usr/local/bin/prometheus \\\n    --config.file /etc/prometheus/prometheus.yml \\\n    --storage.tsdb.path /var/lib/prometheus/ \\\n    --storage.tsdb.retention.time=31d \\\n    --web.console.templates=/etc/prometheus/consoles \\\n    --web.console.libraries=/etc/prometheus/console_libraries\nExecReload=/bin/kill -HUP $MAINPID\n\n[Install]\nWantedBy=multi-user.target\n")),(0,o.kt)("p",null,"Enable service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo systemctl daemon-reload\nsudo systemctl start prometheus\nsudo systemctl enable prometheus\n")),(0,o.kt)("h2",{id:"4-5-grafana"},"4-5: Grafana"),(0,o.kt)("p",null,"Install:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},'cd\nsudo apt-get install -y apt-transport-https\nsudo apt-get install -y software-properties-common wget\nwget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -\nsudo add-apt-repository "deb https://packages.grafana.com/oss/deb stable main"\nsudo apt-get update\nsudo apt-get install grafana-enterprise\n')),(0,o.kt)("h4",{id:"configure-service-3"},"Configure Service"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /lib/systemd/system/grafana-server.service\n")),(0,o.kt)("p",null,"The content of service configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"[Unit]\nDescription=Grafana instance\nDocumentation=http://docs.grafana.org\nWants=network-online.target\nAfter=network-online.target\nAfter=postgresql.service mariadb.service mysql.service\n\n[Service]\nEnvironmentFile=/etc/default/grafana-server\nUser=grafana\nGroup=grafana\nType=simple\nRestart=on-failure\nWorkingDirectory=/usr/share/grafana\nRuntimeDirectory=grafana\nRuntimeDirectoryMode=0750\nExecStart=/usr/sbin/grafana-server \\\n                            --config=${CONF_FILE} \\\n                            --pidfile=${PID_FILE_DIR}/grafana-server.pid \\\n                            --packaging=deb \\\n                            cfg:default.paths.logs=${LOG_DIR} \\\n                            cfg:default.paths.data=${DATA_DIR} \\\n                            cfg:default.paths.plugins=${PLUGINS_DIR} \\\n                            cfg:default.paths.provisioning=${PROVISIONING_CFG_DIR}\n\n\nLimitNOFILE=10000\nTimeoutStopSec=20\nCapabilityBoundingSet=\nDeviceAllow=\nLockPersonality=true\nMemoryDenyWriteExecute=false\nNoNewPrivileges=true\nPrivateDevices=true\nPrivateTmp=true\nPrivateUsers=true\nProtectClock=true\nProtectControlGroups=true\nProtectHome=true\nProtectHostname=true\nProtectKernelLogs=true\nProtectKernelModules=true\nProtectKernelTunables=true\nProtectProc=invisible\nProtectSystem=full\nRemoveIPC=true\nRestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX\nRestrictNamespaces=true\nRestrictRealtime=true\nRestrictSUIDSGID=true\nSystemCallArchitectures=native\nUMask=0027\n\n[Install]\nAlias=grafana.service\nWantedBy=multi-user.target\n")),(0,o.kt)("p",null,"Enable service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo systemctl daemon-reload\nsudo systemctl start grafana-server\nsudo systemctl enable grafana-server\n")),(0,o.kt)("p",null,"Open port to access to metrics. This is optional, only for external use:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell="},"sudo ufw allow 3000/tcp\n")),(0,o.kt)("h4",{id:"configure-dashboard"},"Configure Dashboard"),(0,o.kt)("p",null,"Login to grafana by navigating to webrowser ",(0,o.kt)("inlineCode",{parentName:"p"},"http://192.168.86.29:3000"),". Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"192.168.86.29")," with IP of your node machine. This is same IP used to ssh."),(0,o.kt)("p",null,"Default credentials are username and password ",(0,o.kt)("inlineCode",{parentName:"p"},"admin"),". Set a new secure (long) password when prompted by grafana."),(0,o.kt)("h5",{id:"data-source"},"Data Source"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"On the left-hand menu, hover over the gear menu and click on ",(0,o.kt)("inlineCode",{parentName:"li"},"Data Sources")),(0,o.kt)("li",{parentName:"ol"},"Then click on the Add Data Source button"),(0,o.kt)("li",{parentName:"ol"},"Hover over the Prometheus card on screen, then click on the Select button"),(0,o.kt)("li",{parentName:"ol"},"Enter ",(0,o.kt)("a",{parentName:"li",href:"http://127.0.0.1:9090/"},"http://127.0.0.1:9090/")," into the URL field, then click Save & Test")),(0,o.kt)("h5",{id:"install-dashboard"},"Install Dashboard"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Hover over the plus symbol icon in the left-hand menu, then click on Import"),(0,o.kt)("li",{parentName:"ol"},"Copy and paste the dashboard ",(0,o.kt)("strong",{parentName:"li"},"link")," into the ",(0,o.kt)("inlineCode",{parentName:"li"},"Import via panel json")," text box on the screen"),(0,o.kt)("li",{parentName:"ol"},"Then click the Load button"),(0,o.kt)("li",{parentName:"ol"},"Then click the Import button")),(0,o.kt)("h5",{id:"enable-alerts"},"Enable Alerts"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"On the left-hand menu, hover over the alarm menue and click on ",(0,o.kt)("inlineCode",{parentName:"li"},"Notification channels")),(0,o.kt)("li",{parentName:"ol"},"Click on ",(0,o.kt)("inlineCode",{parentName:"li"},"New channel")),(0,o.kt)("li",{parentName:"ol"},"Select ",(0,o.kt)("inlineCode",{parentName:"li"},"Type")," and ",(0,o.kt)("a",{parentName:"li",href:"https://grafana.com/docs/grafana/latest/alerting/old-alerting/notifications/"},"configure"))),(0,o.kt)("p",null,"On lukso dashboard:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Scroll down on a dashboard to ",(0,o.kt)("inlineCode",{parentName:"li"},"Alerts")," section"),(0,o.kt)("li",{parentName:"ol"},"Select each alert and click ",(0,o.kt)("inlineCode",{parentName:"li"},"Edit")),(0,o.kt)("li",{parentName:"ol"},"In ",(0,o.kt)("inlineCode",{parentName:"li"},"Alert")," tab, select notifications ",(0,o.kt)("inlineCode",{parentName:"li"},"send to")),(0,o.kt)("li",{parentName:"ol"},"Save and repeat for each alert")),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.coincashew.com/coins/overview-eth/guide-or-how-to-setup-a-validator-on-eth2-mainnet/part-i-installation/monitoring-your-validator-with-grafana-and-prometheus?q=grafana"},"https://www.coincashew.com/coins/overview-eth/guide-or-how-to-setup-a-validator-on-eth2-mainnet/part-i-installation/monitoring-your-validator-with-grafana-and-prometheus?q=grafana")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://ethereum.org/en/developers/tutorials/monitoring-geth-with-influxdb-and-grafana/"},"https://ethereum.org/en/developers/tutorials/monitoring-geth-with-influxdb-and-grafana/")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.prylabs.network/docs/prysm-usage/monitoring/grafana-dashboard"},"https://docs.prylabs.network/docs/prysm-usage/monitoring/grafana-dashboard")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Credits:\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/remyroy/ethstaker/blob/main/monitoring.md"},"https://github.com/remyroy/ethstaker/blob/main/monitoring.md"),"\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lykhonis/lukso-node-guide#prometheus"},"https://github.com/lykhonis/lukso-node-guide#prometheus")))}c.isMDXComponent=!0}}]);